// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endpoint.proto

package endpoint

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExchangeMarketDataType struct {
	ExchangeId           string   `protobuf:"bytes,1,opt,name=ExchangeId,proto3" json:"ExchangeId,omitempty"`
	LastPrice            float32  `protobuf:"fixed32,2,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	CurrentBid           float32  `protobuf:"fixed32,3,opt,name=CurrentBid,proto3" json:"CurrentBid,omitempty"`
	CurrentAsk           float32  `protobuf:"fixed32,4,opt,name=CurrentAsk,proto3" json:"CurrentAsk,omitempty"`
	BaseVolume           float32  `protobuf:"fixed32,5,opt,name=BaseVolume,proto3" json:"BaseVolume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExchangeMarketDataType) Reset()         { *m = ExchangeMarketDataType{} }
func (m *ExchangeMarketDataType) String() string { return proto.CompactTextString(m) }
func (*ExchangeMarketDataType) ProtoMessage()    {}
func (*ExchangeMarketDataType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{0}
}

func (m *ExchangeMarketDataType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeMarketDataType.Unmarshal(m, b)
}
func (m *ExchangeMarketDataType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeMarketDataType.Marshal(b, m, deterministic)
}
func (m *ExchangeMarketDataType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeMarketDataType.Merge(m, src)
}
func (m *ExchangeMarketDataType) XXX_Size() int {
	return xxx_messageInfo_ExchangeMarketDataType.Size(m)
}
func (m *ExchangeMarketDataType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeMarketDataType.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeMarketDataType proto.InternalMessageInfo

func (m *ExchangeMarketDataType) GetExchangeId() string {
	if m != nil {
		return m.ExchangeId
	}
	return ""
}

func (m *ExchangeMarketDataType) GetLastPrice() float32 {
	if m != nil {
		return m.LastPrice
	}
	return 0
}

func (m *ExchangeMarketDataType) GetCurrentBid() float32 {
	if m != nil {
		return m.CurrentBid
	}
	return 0
}

func (m *ExchangeMarketDataType) GetCurrentAsk() float32 {
	if m != nil {
		return m.CurrentAsk
	}
	return 0
}

func (m *ExchangeMarketDataType) GetBaseVolume() float32 {
	if m != nil {
		return m.BaseVolume
	}
	return 0
}

type PairType struct {
	BaseSymbol           string                    `protobuf:"bytes,1,opt,name=BaseSymbol,proto3" json:"BaseSymbol,omitempty"`
	BaseId               string                    `protobuf:"bytes,2,opt,name=BaseId,proto3" json:"BaseId,omitempty"`
	QuoteSymbol          string                    `protobuf:"bytes,3,opt,name=QuoteSymbol,proto3" json:"QuoteSymbol,omitempty"`
	QuoteId              string                    `protobuf:"bytes,4,opt,name=QuoteId,proto3" json:"QuoteId,omitempty"`
	ExchangeMarketData   []*ExchangeMarketDataType `protobuf:"bytes,5,rep,name=ExchangeMarketData,proto3" json:"ExchangeMarketData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PairType) Reset()         { *m = PairType{} }
func (m *PairType) String() string { return proto.CompactTextString(m) }
func (*PairType) ProtoMessage()    {}
func (*PairType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{1}
}

func (m *PairType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PairType.Unmarshal(m, b)
}
func (m *PairType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PairType.Marshal(b, m, deterministic)
}
func (m *PairType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PairType.Merge(m, src)
}
func (m *PairType) XXX_Size() int {
	return xxx_messageInfo_PairType.Size(m)
}
func (m *PairType) XXX_DiscardUnknown() {
	xxx_messageInfo_PairType.DiscardUnknown(m)
}

var xxx_messageInfo_PairType proto.InternalMessageInfo

func (m *PairType) GetBaseSymbol() string {
	if m != nil {
		return m.BaseSymbol
	}
	return ""
}

func (m *PairType) GetBaseId() string {
	if m != nil {
		return m.BaseId
	}
	return ""
}

func (m *PairType) GetQuoteSymbol() string {
	if m != nil {
		return m.QuoteSymbol
	}
	return ""
}

func (m *PairType) GetQuoteId() string {
	if m != nil {
		return m.QuoteId
	}
	return ""
}

func (m *PairType) GetExchangeMarketData() []*ExchangeMarketDataType {
	if m != nil {
		return m.ExchangeMarketData
	}
	return nil
}

type MarketType struct {
	Pairs                []*PairType `protobuf:"bytes,1,rep,name=Pairs,proto3" json:"Pairs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MarketType) Reset()         { *m = MarketType{} }
func (m *MarketType) String() string { return proto.CompactTextString(m) }
func (*MarketType) ProtoMessage()    {}
func (*MarketType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{2}
}

func (m *MarketType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketType.Unmarshal(m, b)
}
func (m *MarketType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketType.Marshal(b, m, deterministic)
}
func (m *MarketType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketType.Merge(m, src)
}
func (m *MarketType) XXX_Size() int {
	return xxx_messageInfo_MarketType.Size(m)
}
func (m *MarketType) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketType.DiscardUnknown(m)
}

var xxx_messageInfo_MarketType proto.InternalMessageInfo

func (m *MarketType) GetPairs() []*PairType {
	if m != nil {
		return m.Pairs
	}
	return nil
}

func init() {
	proto.RegisterType((*ExchangeMarketDataType)(nil), "ExchangeMarketDataType")
	proto.RegisterType((*PairType)(nil), "PairType")
	proto.RegisterType((*MarketType)(nil), "MarketType")
}

func init() { proto.RegisterFile("endpoint.proto", fileDescriptor_e90a83b3c7ac16f6) }

var fileDescriptor_e90a83b3c7ac16f6 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xc3, 0x30,
	0x18, 0xc7, 0xc9, 0x6a, 0xa7, 0xf9, 0x06, 0x1e, 0x72, 0x98, 0x39, 0x88, 0x96, 0x9e, 0x7a, 0xb1,
	0x07, 0x7d, 0x82, 0x4d, 0x45, 0x0a, 0x0a, 0x33, 0x8a, 0xf7, 0x6c, 0x09, 0x5a, 0xba, 0x35, 0x25,
	0x49, 0xc1, 0xbd, 0x98, 0xaf, 0xe0, 0x6b, 0x49, 0x52, 0x43, 0x23, 0xee, 0xf8, 0xff, 0xfd, 0xf8,
	0xc2, 0xff, 0xfb, 0x02, 0xa7, 0xb2, 0x15, 0x9d, 0xaa, 0x5b, 0x5b, 0x76, 0x5a, 0x59, 0x95, 0x7f,
	0x21, 0x98, 0xdf, 0x7f, 0x6e, 0x3e, 0x78, 0xfb, 0x2e, 0x9f, 0xb8, 0x6e, 0xa4, 0xbd, 0xe3, 0x96,
	0xbf, 0xee, 0x3b, 0x49, 0x2e, 0x00, 0x82, 0xa9, 0x04, 0x45, 0x19, 0x2a, 0x30, 0x8b, 0x08, 0x39,
	0x07, 0xfc, 0xc8, 0x8d, 0x5d, 0xe9, 0x7a, 0x23, 0xe9, 0x24, 0x43, 0xc5, 0x84, 0x8d, 0xc0, 0x4d,
	0xdf, 0xf6, 0x5a, 0xcb, 0xd6, 0x2e, 0x6b, 0x41, 0x13, 0xaf, 0x23, 0x12, 0xf9, 0x85, 0x69, 0xe8,
	0xd1, 0x1f, 0xbf, 0x30, 0x8d, 0xf3, 0x4b, 0x6e, 0xe4, 0x9b, 0xda, 0xf6, 0x3b, 0x49, 0xd3, 0xc1,
	0x8f, 0x24, 0xff, 0x46, 0x70, 0xb2, 0xe2, 0xb5, 0x0e, 0x55, 0x9d, 0x7a, 0xd9, 0xef, 0xd6, 0x6a,
	0x1b, 0xaa, 0x8e, 0x84, 0xcc, 0x61, 0xea, 0x52, 0x25, 0x7c, 0x4f, 0xcc, 0x7e, 0x13, 0xc9, 0x60,
	0xf6, 0xdc, 0x2b, 0x1b, 0x06, 0x13, 0x2f, 0x63, 0x44, 0x28, 0x1c, 0xfb, 0x58, 0x09, 0xdf, 0x11,
	0xb3, 0x10, 0xc9, 0x03, 0x90, 0xff, 0x87, 0xa3, 0x69, 0x96, 0x14, 0xb3, 0xeb, 0xb3, 0xf2, 0xf0,
	0x4d, 0xd9, 0x81, 0x91, 0xfc, 0x0a, 0x60, 0x48, 0x7e, 0x95, 0x4b, 0x48, 0xdd, 0x5a, 0x86, 0x22,
	0xff, 0x12, 0x2e, 0xc3, 0x92, 0x6c, 0xe0, 0xeb, 0xa9, 0xff, 0xb8, 0x9b, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x09, 0x88, 0x07, 0x19, 0xca, 0x01, 0x00, 0x00,
}
